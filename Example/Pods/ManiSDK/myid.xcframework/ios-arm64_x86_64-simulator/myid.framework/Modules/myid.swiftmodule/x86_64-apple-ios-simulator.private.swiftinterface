// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name myid
import Flutter
import Foundation
import MyIdSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import myid
@objc public class AppearancePublic : ObjectiveC.NSObject {
  final public let primaryColor: UIKit.UIColor?
  final public let errorColor: UIKit.UIColor?
  final public let primaryButtonColor: UIKit.UIColor?
  final public let primaryButtonColorDisabled: UIKit.UIColor?
  final public let primaryButtonTextColor: UIKit.UIColor?
  final public let primaryButtonTextColorDisabled: UIKit.UIColor?
  final public let buttonCornerRadius: Swift.Int?
  public init(primaryColor: UIKit.UIColor?, errorColor: UIKit.UIColor?, primaryButtonColor: UIKit.UIColor?, primaryButtonColorDisabled: UIKit.UIColor?, primaryButtonTextColor: UIKit.UIColor?, primaryButtonTextColorDisabled: UIKit.UIColor?, buttonCornerRadius: Swift.Int?)
  @objc deinit
}
public func loadAppearance(config: Foundation.NSDictionary) throws -> myid.AppearancePublic?
public func loadAppearanceFromConfig(appearancePublic: myid.AppearancePublic?) throws -> MyIdSDK.MyIdAppearance
public func buildMyIdConfig(config: Foundation.NSDictionary, appearanceConfig: Foundation.NSDictionary) throws -> MyIdSDK.MyIdConfig
@objc @_inheritsConvenienceInitializers public class SwiftMyIdPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
